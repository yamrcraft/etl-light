
// THIS IS AN EXAMPLE CONFIGURATION - CHANGE IT TO YOUR NEEDS

spark {
  app-name = "kafka-etl"
  config {
    // Apache Spark configurations
    spark.executor.memory = "1g"
    spark.eventLog.enabled = "true"
    spark.eventLog.dir = "hdfs:/user/spark/applicationHistory"
    spark.ui.port = "4045"
    spark.driver.extraJavaOptions = "-DSPARK_YARN_MODE=true"
    spark.task.maxFailures = "4"
  }
}

kafka {
  // list of topics to consume
  topics = ["events"]

  // Kafka configurations
  config {
    group.id = "kafka-etl"
    metadata.broker.list = "127.0.0.1:9092"
    auto.offset.reset = "largest"
  }
}

etl {

  // distributed lock, use it to control concurrent runs.
  lock {
    enabled = false
    zookeeper-connect = "locahost:2181"
    path = "/etl/file.lock"
    wait-for-lock-seconds = 10
  }

  state {
    folder = "hdfs://data/etl/work/state"
    files-to-keep = 20
  }

  errors-folder = "hdfs://data/etl/errors/events"

  pipeline {

    factory-class = "yamrcraft.etlight.pipeline.ParquetPipelineFactory"

    transformer = {
      config = {
        timestamp-field = "ts"
        timestamp-field-format = "yyyy-MM-dd HH:mm:ss"

        default-schema-file = "hdfs://user/spark/etl/events.avsc"

        schema-selection {
          field = "event_type"
          schemas {
            users = "hdfs://user/spark/etl/users.avsc"
            clicks = "hdfs://user/spark/etl/clicks.avsc"
          }
        }
      }
    }

    writer = {
      config = {
        // uses local file-system file to append data during processing
        working-folder = "file:///tmp/etl"

        // final destination folder - file will be copied from working-folder to output-folder on commit.
        output-folder = "hdfs://data/etl/output/events"

        // output folder structure (according to time retrieved from input event as specified by transformer.timestamp-field)
        partition {
          pattern = "YYYY/MM/dd/HH"
        }

        // mapping of record name (e.g. Avro record name) to folder name.
        record-name-to-folder-mapping {
          Users = "users_events"
          Clicks = "clicks_events"
        }
      }
    }
  }

}